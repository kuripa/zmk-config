/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        gresc: back_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACK_DELETE";
            binding-cells = <39>;
            bindings = <&kp BKSP>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};


/ {
    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
   &kp TAB   &kp Q   &kp W   &kp E       &kp R   &kp T              &kp Y   &kp U      &kp I    &kp O          &kp P     &trans
 &kp LCTRL   &kp A   &kp S   &kp D       &kp F   &kp G              &kp H   &kp J      &kp K    &kp L  &kp SEMICOLON  &kp ENTER
    &trans   &kp Z   &kp X   &kp C       &kp V   &kp B              &kp N   &kp M  &kp COMMA  &kp DOT       &kp FSLH     &trans
                             &mo 1  &kp LSHIFT          &kp SPACE          &gresc      &mo 2
            >;
        };

        NAV_NUM_LAYER {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
 &trans           &trans           &trans           &trans           &trans           &trans               &trans  &kp PAGE_DOWN  &kp PAGE_UP     &trans     &trans  &trans
 &trans        &kp KP_N1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5             &kp LEFT       &kp DOWN       &kp UP  &kp RIGHT     &trans  &trans
 &trans  &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0              &kp ESC       &kp HOME      &kp END  &kp PG_DN  &kp PSCRN  &trans
                                                    &trans   &kp LEFT_SHIFT                   &kp SPACE               &kp DELETE       &trans
            >;
        };

        SYMBOL_LAYER {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
 &trans  &kp EXCLAMATION  &kp AT      &kp LEFT_BRACKET      &kp RIGHT_BRACKET     &trans             &trans   &kp STAR  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans  &kp DEL
 &trans           &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH             &trans  &kp EQUAL          &kp MINUS            &trans  &trans   &trans
 &trans           &trans  &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE     &trans             &trans      &none             &trans            &trans  &trans   &trans
                                                &trans             &kp LSHIFT             &kp SPACE             &trans             &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
 &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
 &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none            &none                 &none         &none         &none         &none         &none       &none
           &none            &none            &none            &none   &none            &none                &reset         &none         &none         &none         &none       &none
                                                             &trans  &trans                   &tog 3                      &trans        &trans
            >;
        };

        TWM {
            bindings = <
 &trans               &trans               &trans               &trans               &trans               &trans          &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LG(KP_NUMBER_1)  &kp LG(KP_NUMBER_2)  &kp LG(KP_NUMBER_3)  &kp LG(KP_NUMBER_4)  &kp LG(KP_NUMBER_5)          &trans  &trans  &trans  &trans  &trans  &trans
 &trans               &trans               &trans               &trans               &trans               &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                                                &trans               &trans                       &trans          &trans  &trans
            >;
        };
    };
};
